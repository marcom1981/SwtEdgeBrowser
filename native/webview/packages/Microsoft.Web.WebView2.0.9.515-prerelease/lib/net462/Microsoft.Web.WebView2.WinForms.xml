<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Web.WebView2.WinForms</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Web.WebView2.WinForms.WebView2">
            <summary>
            Control to embed WebView2 in WinForms.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.#ctor">
            <summary>
            Create a new WebView2 WinForms control.
            After construction the CoreWebView2 property is null.
            Call <see cref="M:Microsoft.Web.WebView2.WinForms.WebView2.EnsureCoreWebView2Async(Microsoft.Web.WebView2.Core.CoreWebView2Environment)"/> to initialize the underlying CoreWebView2.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.EnsureCoreWebView2Async(Microsoft.Web.WebView2.Core.CoreWebView2Environment)">
            <summary>
            Explicitly trigger initialization of the control's <see cref="P:Microsoft.Web.WebView2.WinForms.WebView2.CoreWebView2"/>.
            </summary>
            <param name="environment">
            A pre-created <see cref="T:Microsoft.Web.WebView2.Core.CoreWebView2Environment"/> that should be used to create the CoreWebView2.
            Creating your own environment gives you control over several options that affect how the CoreWebView2 is initialized.
            If you pass null (the default value) then a default environment will be created and used automatically.
            </param>
            <returns>
            A Task that represents the background initialization process.
            When the task completes then the CoreWebView2 property will be available for use (i.e. non-null).
            Note that the control's <see cref="E:Microsoft.Web.WebView2.WinForms.WebView2.CoreWebView2Ready"/> event will be invoked before the task completes.
            </returns>
            <remarks>
            Calling this method additional times will have no effect (any specified environment is ignored) and return the same Task as the first call.
            Calling this method after initialization has been implicitly triggered by setting the <see cref="P:Microsoft.Web.WebView2.WinForms.WebView2.Source"/> property will have no effect (any specified environment is ignored) and simply return a Task representing that initialization already in progress.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked from non-UI thread.</exception>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.InitCoreWebView2Async(Microsoft.Web.WebView2.Core.CoreWebView2Environment)">
            <summary>
            This is the private function which implements the actual background initialization task.
            Cannot be called if the control is already initialized or has been disposed.
            </summary>
            <param name="environment">
            The environment to use to create the <see cref="T:Microsoft.Web.WebView2.Core.CoreWebView2Controller"/>.
            If that is null then a default environment is created with <see cref="M:Microsoft.Web.WebView2.Core.CoreWebView2Environment.CreateAsync(System.String,System.String,Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions)"/> and its default parameters.
            </param>
            <returns>A task representing the background initialization process.</returns>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.OnVisibleChanged(System.EventArgs)">
            <summary>
            Protected VisibilityChanged handler.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.OnEnter(System.EventArgs)">
            <summary>
            Protected focus handler.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.OnSizeChanged(System.EventArgs)">
            <summary>
            Protected SizeChanged handler.
            </summary>
        </member>
        <member name="P:Microsoft.Web.WebView2.WinForms.WebView2.CoreWebView2">
            <summary>
            The underlying CoreWebView2. Use this property to perform more operations on the WebView2 content than is exposed
            on the WebView2. This value is null until it is initialized. You can force the underlying CoreWebView2 to
            initialize via the InitializeAsync method.
            </summary>
        </member>
        <member name="P:Microsoft.Web.WebView2.WinForms.WebView2.ZoomFactor">
            <summary>
            The zoom factor for the WebView.
            </summary>
        </member>
        <member name="P:Microsoft.Web.WebView2.WinForms.WebView2.Source">
            <summary>
            The Source property is the URI of the top level document of the
            WebView2. Setting the Source is equivalent to calling CoreWebView2.Navigate.
            If the underlying CoreWebView2 is not yet initialized, this property is "about:blank".
            If the property is set to a non-absolute URI or null, the property remains unchanged.
            See <see cref="M:Microsoft.Web.WebView2.Core.CoreWebView2.Navigate(System.String)"/> documentation for more information.
            </summary>
        </member>
        <member name="P:Microsoft.Web.WebView2.WinForms.WebView2.CanGoForward">
            <summary>
            Returns true if the webview can navigate to a next page in the
            navigation history via the GoForward method.
            This is equivalent to the CanGoForward property on the CoreWebView2.
            If the underlying CoreWebView2 is not yet initialized, this property is false.
            See <see cref="P:Microsoft.Web.WebView2.Core.CoreWebView2.CanGoForward"/> documentation for more information.
            </summary>
        </member>
        <member name="P:Microsoft.Web.WebView2.WinForms.WebView2.CanGoBack">
            <summary>
            Returns true if the webview can navigate to a previous page in the
            navigation history via the GoBack method.
            This is equivalent to the CanGoBack property on the CoreWebView2.
            If the underlying CoreWebView2 is not yet initialized, this property is false.
            See <see cref="P:Microsoft.Web.WebView2.Core.CoreWebView2.CanGoBack"/> documentation for more information.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.ExecuteScriptAsync(System.String)">
            <summary>
            Executes the provided script in the top level document of the WebView2.
            This is equivalent to the ExecuteScriptAsync method on the CoreWebView2.
            If the underlying CoreWebView2 is not yet initialized, this method throws an InvalidOperationException.
            See <see cref="M:Microsoft.Web.WebView2.Core.CoreWebView2.ExecuteScriptAsync(System.String)"/> documentation for more information.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.Reload">
            <summary>
            Reload the top level document of the WebView2.
            This is equivalent to the Reload method on the CoreWebView2.
            If the underlying CoreWebView2 is not yet initialized, this method throws an InvalidOperationException.
            See <see cref="M:Microsoft.Web.WebView2.Core.CoreWebView2.Reload"/> documentation for more information.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.GoForward">
            <summary>
            Navigate to the next page in navigation history.
            This is equivalent to the GoForward method on the CoreWebView2.
            If the underlying CoreWebView2 is not yet initialized, this method does nothing.
            See <see cref="M:Microsoft.Web.WebView2.Core.CoreWebView2.GoForward"/> documentation for more information.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.GoBack">
            <summary>
            Navigate to the previous page in navigation history.
            This is equivalent to the GoBack method on the CoreWebView2.
            If the underlying CoreWebView2 is not yet initialized, this method does nothing.
            See <see cref="M:Microsoft.Web.WebView2.Core.CoreWebView2.GoBack"/> documentation for more information.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.NavigateToString(System.String)">
            <summary>
            Render the provided HTML as the top level document of the WebView2.
            This is equivalent to the NavigateToString method on the CoreWebView2.
            If the underlying CoreWebView2 is not yet initialized, this method throws an InvalidOperationException.
            See <see cref="M:Microsoft.Web.WebView2.Core.CoreWebView2.NavigateToString(System.String)"/> documentation for more information.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.Stop">
            <summary>
            Stop any in progress navigation in the WebView2.
            This is equivalent to the Stop method on the CoreWebView2.
            If the underlying CoreWebView2 is not yet initialized, this method does nothing.
            See <see cref="M:Microsoft.Web.WebView2.Core.CoreWebView2.Stop"/> documentation for more information.
            </summary>
        </member>
        <member name="E:Microsoft.Web.WebView2.WinForms.WebView2.CoreWebView2Ready">
            <summary>
            This event is triggered when the control's <see cref="P:Microsoft.Web.WebView2.WinForms.WebView2.CoreWebView2"/> has finished being initialized (regardless of how initialization was triggered) but before it is used for anything.
            You should handle this event if you need to perform one time setup operations on the CoreWebView2 which you want to affect all of its usages
            (e.g. adding event handlers, configuring settings, installing document creation scripts, adding host objects).
            </summary>
            <remarks>
            This event doesn't provide any arguments, and the sender will be the WebView2 control, whose CoreWebView2 property will now be valid (i.e. non-null) for the first time.
            </remarks>
        </member>
        <member name="E:Microsoft.Web.WebView2.WinForms.WebView2.NavigationStarting">
            <summary>
            NavigationStarting dispatches before a new navigate starts for the top
            level document of the WebView2.
            This is equivalent to the NavigationStarting event on the CoreWebView2.
            See <see cref="E:Microsoft.Web.WebView2.Core.CoreWebView2.NavigationStarting"/> documentation for more information.
            </summary>
        </member>
        <member name="E:Microsoft.Web.WebView2.WinForms.WebView2.NavigationCompleted">
            <summary>
            NavigationCompleted dispatches after a navigate of the top level
            document completes rendering either successfully or not.
            This is equivalent to the NavigationCompleted event on the CoreWebView2.
            See <see cref="E:Microsoft.Web.WebView2.Core.CoreWebView2.NavigationCompleted"/> documentation for more information.
            </summary>
        </member>
        <member name="E:Microsoft.Web.WebView2.WinForms.WebView2.WebMessageReceived">
            <summary>
            WebMessageReceived dispatches after web content sends a message to the
            app host via `chrome.webview.postMessage`.
            This is equivalent to the WebMessageReceived event on the CoreWebView2.
            See <see cref="E:Microsoft.Web.WebView2.Core.CoreWebView2.WebMessageReceived"/> documentation for more information.
            </summary>
        </member>
        <member name="E:Microsoft.Web.WebView2.WinForms.WebView2.SourceChanged">
            <summary>
            SourceChanged dispatches after the Source property changes. This may happen
            during a navigation or if otherwise the script in the page changes the
            URI of the document.
            This is equivalent to the SourceChanged event on the CoreWebView2.
            See <see cref="E:Microsoft.Web.WebView2.Core.CoreWebView2.SourceChanged"/> documentation for more information.
            </summary>
        </member>
        <member name="E:Microsoft.Web.WebView2.WinForms.WebView2.ContentLoading">
            <summary>
            ContentLoading dispatches after a navigation begins to a new URI and the
            content of that URI begins to render.
            This is equivalent to the ContentLoading event on the CoreWebView2.
            See <see cref="E:Microsoft.Web.WebView2.Core.CoreWebView2.ContentLoading"/> documentation for more information.
            </summary>
        </member>
        <member name="F:Microsoft.Web.WebView2.WinForms.WebView2.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Web.WebView2.WinForms.WebView2.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
